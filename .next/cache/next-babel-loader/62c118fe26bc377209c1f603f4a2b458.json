{"ast":null,"code":"var _jsxFileName = \"D:\\\\salvaged projects\\\\admin-dashboard-react\\\\components\\\\themeSelect\\\\theme-select.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styles from './theme-select.module.css';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport StoreContext from '../../store/index';\n\nfunction ThemeSelect() {\n  _s();\n\n  var _this = this;\n\n  var store = useContext(StoreContext); //const [selectedTheme, setSelectedTheme] = useState('light')\n\n  var THEME = {\n    light: 'Light',\n\n    /*dim: 'Dim',*/\n    dark: 'Dark'\n  };\n  return __jsx(\"div\", {\n    className: styles.inputBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, ['light', 'dark'].map(function (theme) {\n    return __jsx(\"label\", {\n      key: theme,\n      className: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      value: theme,\n      name: \"theme\",\n      checked: theme === store.theme,\n      onChange: function onChange(e) {\n        return store.changeTheme(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }), THEME[theme]);\n  }));\n}\n\n_s(ThemeSelect, \"Wl1jJrZzTCxjtMcqth/dX4wg3Uo=\");\n\n_c = ThemeSelect;\nexport default ThemeSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSelect\");","map":{"version":3,"names":["React","styles","useState","useContext","StoreContext","ThemeSelect","store","THEME","light","dark","inputBox","map","theme","label","e","changeTheme","target","value"],"sources":["D:/salvaged projects/admin-dashboard-react/components/themeSelect/theme-select.js"],"sourcesContent":["import React from 'react'\r\nimport styles from './theme-select.module.css'\r\nimport { useState } from 'react'\r\nimport { useContext } from 'react'\r\nimport StoreContext from '../../store/index'\r\n\r\nfunction ThemeSelect() {\r\n  const store = useContext(StoreContext)\r\n\r\n  //const [selectedTheme, setSelectedTheme] = useState('light')\r\n  const THEME = {\r\n    light: 'Light',\r\n    /*dim: 'Dim',*/\r\n    dark: 'Dark'\r\n  }\r\n  return (\r\n    <div className={styles.inputBox}>\r\n      {['light', 'dark'].map((theme) => (\r\n        <label key={theme} className={styles.label}>\r\n          <input\r\n            type=\"radio\"\r\n            value={theme}\r\n            name=\"theme\"\r\n            checked={theme === store.theme}\r\n            onChange={(e) => store.changeTheme(e.target.value)}\r\n          />\r\n          {THEME[theme]}\r\n        </label>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ThemeSelect\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EAAA;;EACrB,IAAMC,KAAK,GAAGH,UAAU,CAACC,YAAD,CAAxB,CADqB,CAGrB;;EACA,IAAMG,KAAK,GAAG;IACZC,KAAK,EAAE,OADK;;IAEZ;IACAC,IAAI,EAAE;EAHM,CAAd;EAKA,OACE;IAAK,SAAS,EAAER,MAAM,CAACS,QAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAAC,OAAD,EAAU,MAAV,EAAkBC,GAAlB,CAAsB,UAACC,KAAD;IAAA,OACrB;MAAO,GAAG,EAAEA,KAAZ;MAAmB,SAAS,EAAEX,MAAM,CAACY,KAArC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE;MACE,IAAI,EAAC,OADP;MAEE,KAAK,EAAED,KAFT;MAGE,IAAI,EAAC,OAHP;MAIE,OAAO,EAAEA,KAAK,KAAKN,KAAK,CAACM,KAJ3B;MAKE,QAAQ,EAAE,kBAACE,CAAD;QAAA,OAAOR,KAAK,CAACS,WAAN,CAAkBD,CAAC,CAACE,MAAF,CAASC,KAA3B,CAAP;MAAA,CALZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,EAQGV,KAAK,CAACK,KAAD,CARR,CADqB;EAAA,CAAtB,CADH,CADF;AAgBD;;GAzBQP,W;;KAAAA,W;AA2BT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}