{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport '../styles/app.css';\nimport '../styles/variables.css';\nimport StoreContext from '../store/index';\nimport { useState, useEffect, useLayoutEffect } from 'react';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: theme,\n    1: setTheme\n  } = useState(null);\n  /*UseLayoutEffect içinde planlanan güncellemeler, tarayıcının boyama şansı bulamadan eşzamanlı olarak temizlenir.*/\n\n  useEffect(() => {\n    const theme = localStorage.getItem('THEME') || 'light';\n    setTheme(theme);\n  }, []);\n  /* we recommend starting with useEffect first and only trying useLayoutEffect if that causes a problem. */\n\n  const changeTheme = theme => {\n    setTheme(theme);\n    localStorage.setItem('THEME', theme);\n  };\n\n  useEffect(() => {\n    if (!theme) return;\n    const $html = document.querySelector('html');\n    $html.classList.remove('light');\n    $html.classList.remove('dim');\n    $html.classList.remove('dark');\n    $html.classList.add(theme.toString());\n  }, [theme]);\n  return __jsx(StoreContext.Provider, {\n    value: {\n      theme,\n      changeTheme\n    }\n  }, __jsx(Component, pageProps));\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}